name: E2E Tests with Cypress

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    name: Unit Tests (Jest)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and start services
        run: |
          docker-compose up -d db backend frontend

      - name: Wait for services to be ready
        run: |
          echo "Waiting for backend to be ready..."
          timeout 60s bash -c 'until curl -f http://localhost:3001/health 2>/dev/null; do sleep 2; done' || true
          echo "Waiting for frontend to be ready..."  
          timeout 60s bash -c 'until curl -f http://localhost:3000 2>/dev/null; do sleep 2; done' || true

      - name: Run unit tests
        run: |
          docker-compose exec -T frontend npm run test:unit

      - name: Stop services
        if: always()
        run: docker-compose down

  e2e-tests:
    runs-on: ubuntu-latest
    name: E2E Tests (Cypress)
    needs: unit-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and start services
        run: |
          docker-compose up -d db backend frontend

      - name: Wait for services to be ready
        run: |
          echo "Waiting for backend to be ready..."
          timeout 120s bash -c 'until curl -f http://localhost:3001/health 2>/dev/null; do sleep 3; done' || true
          echo "Waiting for frontend to be ready..."
          timeout 120s bash -c 'until curl -f http://localhost:3000 2>/dev/null; do sleep 3; done' || true

      - name: Check services status
        run: |
          docker-compose ps
          docker-compose logs --tail=50 backend
          docker-compose logs --tail=50 frontend

      - name: Seed database for E2E tests
        run: |
          docker-compose exec -T backend npx prisma migrate reset --force --skip-seed
          docker-compose exec -T backend npx prisma db seed

      - name: Run Cypress E2E tests
        run: |
          docker-compose --profile test run --rm cypress

      - name: Upload Cypress screenshots on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: frontend/cypress/screenshots/
          retention-days: 7

      - name: Upload Cypress videos on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-videos
          path: frontend/cypress/videos/
          retention-days: 7

      - name: Stop services
        if: always()
        run: docker-compose down

  docker-health-check:
    runs-on: ubuntu-latest
    name: Docker Health Check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify Docker Compose configuration
        run: |
          docker-compose config

      - name: Build all services
        run: |
          docker-compose build

      - name: Start services with health checks
        run: |
          docker-compose up -d

      - name: Wait and verify all services are healthy
        run: |
          sleep 30
          docker-compose ps

      - name: Test frontend accessibility
        run: |
          curl -f http://localhost:3000 || exit 1

      - name: Test backend accessibility
        run: |
          curl -f http://localhost:3001/health || exit 1

      - name: Stop services
        if: always()
        run: docker-compose down
