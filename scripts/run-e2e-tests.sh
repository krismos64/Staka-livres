#!/bin/bash

# Script pour ex√©cuter les tests E2E Cypress avec pr√©paration de la DB
# Usage: ./scripts/run-e2e-tests.sh

set -e

echo "üöÄ D√©marrage des tests E2E Cypress..."

# Couleurs pour les logs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction de log
log() {
    echo -e "${BLUE}[E2E]${NC} $1"
}

error() {
    echo -e "${RED}[ERREUR]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCC√àS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[ATTENTION]${NC} $1"
}

# V√©rifier que Docker Compose est disponible
if ! command -v docker-compose &> /dev/null; then
    error "docker-compose n'est pas install√© ou disponible"
    exit 1
fi

# V√©rifier que les services principaux sont lanc√©s
log "V√©rification des services Docker..."
if ! docker-compose ps | grep -q "Up"; then
    warning "Les services ne semblent pas tous lanc√©s"
    log "D√©marrage des services db, backend, frontend..."
    docker-compose up -d db backend frontend
    log "Attente du d√©marrage des services (30s)..."
    sleep 30
fi

# V√©rifier la connectivit√© backend
log "V√©rification de la connectivit√© backend..."
for i in {1..10}; do
    if curl -f http://localhost:3001/health &>/dev/null; then
        success "Backend accessible"
        break
    else
        if [ $i -eq 10 ]; then
            error "Backend non accessible apr√®s 10 tentatives"
            docker-compose logs --tail=20 backend
            exit 1
        fi
        warning "Backend non accessible, tentative $i/10..."
        sleep 3
    fi
done

# V√©rifier la connectivit√© frontend  
log "V√©rification de la connectivit√© frontend..."
for i in {1..10}; do
    if curl -f http://localhost:3000 &>/dev/null; then
        success "Frontend accessible"
        break
    else
        if [ $i -eq 10 ]; then
            error "Frontend non accessible apr√®s 10 tentatives"
            docker-compose logs --tail=20 frontend
            exit 1
        fi
        warning "Frontend non accessible, tentative $i/10..."
        sleep 3
    fi
done

# Pr√©paration de la base de donn√©es
log "Pr√©paration de la base de donn√©es..."
log "Reset de la base de donn√©es..."
if docker-compose exec -T backend npx prisma migrate reset --force --skip-seed; then
    success "Reset de la DB termin√©"
else
    error "√âchec du reset de la DB"
    exit 1
fi

log "Seed de la base de donn√©es..."
if docker-compose exec -T backend npx prisma db seed; then
    success "Seed de la DB termin√©"
else
    error "√âchec du seed de la DB"
    exit 1
fi

log "Attente de la stabilisation de la DB (5s)..."
sleep 5

# Lancement des tests Cypress
log "Lancement des tests Cypress..."
success "üéØ D√©marrage de Cypress en mode headless..."

if docker-compose --profile test run --rm cypress; then
    success "‚úÖ Tests E2E termin√©s avec succ√®s!"
    exit 0
else
    error "‚ùå Tests E2E √©chou√©s"
    
    # Affichage des logs utiles en cas d'√©chec
    warning "Logs des services pour diagnostic:"
    echo ""
    echo "=== LOGS BACKEND ==="
    docker-compose logs --tail=50 backend
    echo ""
    echo "=== LOGS FRONTEND ==="  
    docker-compose logs --tail=50 frontend
    echo ""
    echo "=== LOGS CYPRESS ==="
    docker-compose logs cypress
    
    exit 1
fi 