// Tests E2E pour le workflow complet client : Projet â†’ Paiement â†’ Admin

describe("Client Workflow - Tests E2E Complet", () => {
  let testProjectId: string;
  let testProjectTitle: string;

  beforeEach(() => {
    // RÃ©initialiser la base de donnÃ©es avant chaque test
    cy.resetDatabase();
    
    // GÃ©nÃ©rer un titre de projet unique pour ce test
    testProjectTitle = `Manuscrit E2E Test ${Date.now()}`;
  });

  it("Workflow complet : Utilisateur crÃ©Ã© projet â†’ Paiement â†’ Admin traite â†’ Livraison", () => {
    
    // ===== Ã‰TAPE 1: CONNEXION UTILISATEUR =====
    cy.log("ðŸ”µ Ã‰TAPE 1: Connexion utilisateur client");
    
    cy.loginAsUser();
    cy.visit("/app/projects");
    cy.wait(2000);
    
    // VÃ©rifier qu'on est bien sur la page projets
    cy.contains("Mes Projets", { timeout: 10000 }).should("be.visible");
    cy.log("âœ… Utilisateur connectÃ© et sur la page projets");

    // ===== Ã‰TAPE 2: CRÃ‰ATION DU PROJET =====
    cy.log("ðŸ”µ Ã‰TAPE 2: CrÃ©ation d'un nouveau projet");
    
    // Cliquer sur "Nouveau projet"
    cy.contains("Nouveau projet", { timeout: 10000 }).click();
    cy.wait(1000);
    
    // Remplir le formulaire de crÃ©ation de projet
    cy.get('[data-cy="project-title"]', { timeout: 10000 })
      .should("be.visible")
      .type(testProjectTitle);
    
    // SÃ©lectionner le type de manuscrit
    cy.get('[data-cy="project-type"]').select("Roman");
    
    // Saisir le nombre de pages
    cy.get('[data-cy="project-pages"]').type("150");
    
    // SÃ©lectionner un pack (Pack IntÃ©gral)
    cy.get('[data-cy="pack-integral"]').click();
    
    // Ajouter une description
    cy.get('[data-cy="project-description"]')
      .type("Test E2E - Roman de 150 pages pour validation du workflow complet");
    
    // Simuler l'upload d'un fichier (optionnel selon l'implÃ©mentation)
    cy.get('[data-cy="file-upload"]', { timeout: 5000 }).then(($input) => {
      if ($input.length > 0) {
        // CrÃ©er un fichier fictif pour le test
        const fileName = 'test-manuscript.docx';
        cy.fixture('test-manuscript.docx', 'base64').then(fileContent => {
          cy.get('[data-cy="file-upload"]').attachFile({
            fileContent,
            fileName,
            mimeType: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'
          });
        });
      }
    });
    
    // Soumettre le formulaire de crÃ©ation
    cy.get('[data-cy="create-project-submit"]').click();
    cy.wait(2000);
    
    // VÃ©rifier que le projet a Ã©tÃ© crÃ©Ã©
    cy.contains(testProjectTitle, { timeout: 10000 }).should("be.visible");
    cy.contains("EN_ATTENTE", { timeout: 5000 }).should("be.visible");
    cy.log("âœ… Projet crÃ©Ã© avec succÃ¨s - Statut: EN_ATTENTE");

    // ===== Ã‰TAPE 3: PROCESSUS DE PAIEMENT =====
    cy.log("ðŸ”µ Ã‰TAPE 3: Processus de paiement");
    
    // Cliquer sur "Payer" ou accÃ©der au paiement
    cy.contains("Payer", { timeout: 10000 }).click();
    cy.wait(2000);
    
    // VÃ©rifier que le modal de paiement s'ouvre
    cy.get('[data-cy="payment-modal"]', { timeout: 10000 })
      .should("be.visible");
    
    // VÃ©rifier les dÃ©tails du paiement
    cy.contains("Pack IntÃ©gral").should("be.visible");
    cy.contains("300â‚¬").should("be.visible"); // 150 pages Ã— 2â‚¬
    
    // Simuler le paiement Stripe (mode test)
    cy.simulateStripePayment();
    
    // Attendre la confirmation de paiement
    cy.contains("Paiement confirmÃ©", { timeout: 15000 }).should("be.visible");
    cy.log("âœ… Paiement traitÃ© avec succÃ¨s");
    
    // VÃ©rifier que le statut du projet a changÃ©
    cy.visit("/app/projects");
    cy.wait(2000);
    cy.contains(testProjectTitle).should("be.visible");
    cy.contains("EN_COURS", { timeout: 10000 }).should("be.visible");
    cy.log("âœ… Statut projet mis Ã  jour: EN_COURS");

    // ===== Ã‰TAPE 4: VÃ‰RIFICATION CÃ”TÃ‰ ADMIN =====
    cy.log("ðŸ”µ Ã‰TAPE 4: VÃ©rification cÃ´tÃ© administrateur");
    
    // DÃ©connexion utilisateur et connexion admin
    cy.logout();
    cy.loginAsAdmin();
    
    // Naviguer vers la gestion des commandes
    cy.visit("/admin/commandes");
    cy.wait(3000);
    
    // VÃ©rifier que le projet apparaÃ®t dans la liste admin
    cy.contains(testProjectTitle, { timeout: 10000 }).should("be.visible");
    cy.contains("EN_COURS").should("be.visible");
    cy.log("âœ… Projet visible cÃ´tÃ© admin avec statut EN_COURS");
    
    // Traiter le projet (changer le statut vers TERMINE)
    cy.contains(testProjectTitle)
      .parent()
      .within(() => {
        // Cliquer sur le sÃ©lecteur de statut
        cy.get('[data-cy="status-select"]', { timeout: 5000 }).select("TERMINE");
      });
    
    // Confirmer le changement de statut
    cy.contains("Statut mis Ã  jour", { timeout: 10000 }).should("be.visible");
    cy.log("âœ… Statut projet mis Ã  jour par admin: TERMINÃ‰");
    
    // Ajouter une note de correction (optionnel)
    cy.contains(testProjectTitle)
      .parent()
      .within(() => {
        cy.get('[data-cy="corrector-notes"]', { timeout: 5000 }).then(($notes) => {
          if ($notes.length > 0) {
            cy.get('[data-cy="corrector-notes"]')
              .type("Correction terminÃ©e. Manuscrit relu et corrigÃ© selon les standards.");
          }
        });
      });

    // ===== Ã‰TAPE 5: VÃ‰RIFICATION CÃ”TÃ‰ CLIENT =====
    cy.log("ðŸ”µ Ã‰TAPE 5: VÃ©rification livraison cÃ´tÃ© client");
    
    // DÃ©connexion admin et reconnexion utilisateur
    cy.logout();
    cy.loginAsUser();
    
    // Retourner sur les projets
    cy.visit("/app/projects");
    cy.wait(2000);
    
    // VÃ©rifier que le projet est maintenant terminÃ©
    cy.contains(testProjectTitle, { timeout: 10000 }).should("be.visible");
    cy.contains("TERMINE", { timeout: 10000 }).should("be.visible");
    cy.log("âœ… Statut final visible cÃ´tÃ© client: TERMINÃ‰");
    
    // VÃ©rifier que le tÃ©lÃ©chargement est disponible
    cy.contains(testProjectTitle)
      .parent()
      .within(() => {
        cy.get('[data-cy="download-button"]', { timeout: 5000 }).should("be.visible");
        cy.get('[data-cy="download-button"]').should("not.be.disabled");
      });
    
    cy.log("âœ… Bouton de tÃ©lÃ©chargement disponible");

    // ===== Ã‰TAPE 6: VÃ‰RIFICATION FACTURE =====
    cy.log("ðŸ”µ Ã‰TAPE 6: VÃ©rification facture gÃ©nÃ©rÃ©e");
    
    // Aller sur la page facturation
    cy.visit("/app/billing");
    cy.wait(2000);
    
    // VÃ©rifier qu'une facture a Ã©tÃ© gÃ©nÃ©rÃ©e pour ce projet
    cy.contains("Facture", { timeout: 10000 }).should("be.visible");
    cy.contains("300â‚¬").should("be.visible");
    cy.contains("Pack IntÃ©gral").should("be.visible");
    
    // VÃ©rifier les dÃ©tails de facturation spÃ©cifiques au projet
    cy.get('[data-cy="invoice-list"]').within(() => {
      cy.contains(testProjectTitle).should("be.visible");
      cy.contains("PayÃ©e").should("be.visible");
    });
    
    cy.log("âœ… Facture gÃ©nÃ©rÃ©e et visible avec dÃ©tails du projet");

    // ===== VALIDATION FINALE =====
    cy.log("ðŸŸ¢ WORKFLOW COMPLET VALIDÃ‰ AVEC SUCCÃˆS !");
    cy.log("âœ… Projet crÃ©Ã© â†’ Paiement traitÃ© â†’ Admin a traitÃ© â†’ Client peut tÃ©lÃ©charger");
  });

  it("Workflow avec Ã©chec de paiement", () => {
    cy.log("ðŸ”µ Test du workflow avec Ã©chec de paiement");
    
    // Connexion et crÃ©ation de projet
    cy.loginAsUser();
    cy.visit("/app/projects");
    cy.contains("Nouveau projet").click();
    
    // CrÃ©ation rapide d'un projet
    cy.get('[data-cy="project-title"]').type(`Projet Ã‰chec Paiement ${Date.now()}`);
    cy.get('[data-cy="project-type"]').select("Nouvelle");
    cy.get('[data-cy="project-pages"]').type("50");
    cy.get('[data-cy="pack-correction"]').click();
    cy.get('[data-cy="create-project-submit"]').click();
    
    // Simuler un Ã©chec de paiement
    cy.contains("Payer").click();
    cy.simulateStripePaymentFailure();
    
    // VÃ©rifier que le projet reste en attente
    cy.visit("/app/projects");
    cy.contains("EN_ATTENTE").should("be.visible");
    cy.log("âœ… Ã‰chec paiement gÃ©rÃ© - Projet reste EN_ATTENTE");
  });

  it("Workflow admin : Modification de statut et notifications", () => {
    cy.log("ðŸ”µ Test des fonctionnalitÃ©s avancÃ©es admin");
    
    // Pre-crÃ©er un projet payÃ© via API pour gagner du temps
    cy.createPaidProject(testProjectTitle).then((projectId) => {
      testProjectId = projectId;
      
      // Se connecter en admin
      cy.loginAsAdmin();
      cy.visit("/admin/commandes");
      
      // Tester plusieurs changements de statut
      const statuses = ["SUSPENDUE", "EN_COURS", "TERMINE"];
      
      statuses.forEach((status, index) => {
        cy.contains(testProjectTitle)
          .parent()
          .within(() => {
            cy.get('[data-cy="status-select"]').select(status);
          });
        
        cy.wait(1000);
        cy.log(`âœ… Statut changÃ© vers: ${status}`);
      });
      
      // VÃ©rifier les notifications admin
      cy.visit("/admin/notifications");
      cy.contains("Nouveau paiement", { timeout: 5000 }).should("be.visible");
    });
  });
});