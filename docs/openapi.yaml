openapi: 3.0.3
info:
  title: Staka Livres API
  description: API for the Staka Livres manuscript correction platform
  version: 2.0.0
  contact:
    name: Staka Livres
    email: contact@staka-editions.com

servers:
  - url: http://localhost:3001
    description: Development server
  - url: https://api.staka-editions.com
    description: Production server

paths:
  /projects:
    get:
      summary: Get user projects with pagination
      description: Retrieve projects for the authenticated user with pagination, filtering, and search capabilities
      tags:
        - Projects
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Page number (starts from 1)
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Number of projects per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
        - name: status
          in: query
          description: Filter projects by status
          required: false
          schema:
            type: string
            enum: [all, active, pending, completed]
            default: all
        - name: search
          in: query
          description: Search projects by title (max 100 characters)
          required: false
          schema:
            type: string
            maxLength: 100
      responses:
        '200':
          description: Paginated list of user projects with metadata
          headers:
            X-Total-Count:
              description: Total number of projects matching the criteria
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Project'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
              example:
                data:
                  - id: "cmd-1-uuid"
                    title: "L'Écho du Temps"
                    type: "Roman"
                    pages: 280
                    startedAt: "2025-01-05"
                    deliveryAt: "2025-01-15"
                    corrector: "Sarah Martin"
                    pack: "Pack Intégral"
                    status: "completed"
                    progress: 100
                    rating: 4.8
                    canDownload: true
                meta:
                  page: 1
                  pageSize: 10
                  total: 42
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Paramètres invalides"
                message: "page doit être ≥ 1"
        '401':
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Authentification requise"
                message: "Utilisateur non authentifié"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Erreur interne du serveur"
                message: "Impossible de récupérer les projets"

  /projects/counts:
    get:
      summary: Get project status counts
      description: Retrieve count of projects grouped by status for the authenticated user
      tags:
        - Projects
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Project counts by status
          content:
            application/json:
              schema:
                type: object
                properties:
                  all:
                    type: integer
                    description: Total number of projects
                  active:
                    type: integer
                    description: Number of active projects (EN_COURS)
                  pending:
                    type: integer
                    description: Number of pending projects (EN_ATTENTE)
                  completed:
                    type: integer
                    description: Number of completed projects (TERMINE)
              example:
                all: 42
                active: 12
                pending: 5
                completed: 25
        '401':
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Project:
      type: object
      description: Detailed project information with all computed fields
      properties:
        id:
          type: string
          description: Unique identifier for the project
          example: "cmd-1-uuid"
        title:
          type: string
          description: Project title
          example: "L'Écho du Temps"
        type:
          type: string
          description: Project type (automatically determined from description)
          example: "Roman"
        pages:
          type: integer
          nullable: true
          description: Estimated number of pages
          example: 280
        startedAt:
          type: string
          format: date
          description: Project start date (YYYY-MM-DD)
          example: "2025-01-05"
        deliveryAt:
          type: string
          format: date
          nullable: true
          description: Planned delivery date (YYYY-MM-DD)
          example: "2025-01-15"
        corrector:
          type: string
          nullable: true
          description: Assigned corrector name
          example: "Sarah Martin"
        pack:
          type: string
          description: Service package (determined by amount)
          example: "Pack Intégral"
        status:
          type: string
          enum: [pending, active, completed, cancelled, suspended]
          description: Current project status
          example: "completed"
        progress:
          type: integer
          minimum: 0
          maximum: 100
          description: Project completion percentage
          example: 100
        rating:
          type: number
          minimum: 1
          maximum: 5
          nullable: true
          description: Project rating (only for completed projects)
          example: 4.8
        canDownload:
          type: boolean
          description: Whether the corrected document can be downloaded
          example: true
      required:
        - id
        - title
        - type
        - startedAt
        - pack
        - status
        - progress
        - canDownload

    PaginationMeta:
      type: object
      description: Pagination metadata
      properties:
        page:
          type: integer
          description: Current page number
          example: 1
        pageSize:
          type: integer
          description: Number of items per page
          example: 10
        total:
          type: integer
          description: Total number of items
          example: 42
      required:
        - page
        - pageSize
        - total

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error type or category
        message:
          type: string
          description: Detailed error message
        details:
          type: array
          items:
            type: object
          description: Additional error details (for validation errors)
      required:
        - error
        - message

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authentication