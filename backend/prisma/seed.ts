import { PageStatus, PageType, PrismaClient, Role } from "@prisma/client";
import bcrypt from "bcryptjs";

const prisma = new PrismaClient();

async function main() {
  console.log("üîÑ Suppression de toutes les entit√©s sauf Tarifs et FAQ...");

  // Suppression transactionnelle dans l'ordre des d√©pendances
  await prisma.$transaction([
    prisma.notification.deleteMany(),
    prisma.message.deleteMany(),
    prisma.file.deleteMany(),
    prisma.paymentMethod.deleteMany(),
    // prisma.passwordReset.deleteMany(), // Temporairement comment√©
    prisma.supportRequest.deleteMany(),
    prisma.commande.deleteMany(),
    prisma.invoice.deleteMany(),
    prisma.user.deleteMany(),
  ]);

  console.log("‚úÖ Toutes les entit√©s supprim√©es (Tarifs et FAQ conserv√©s).");

  // Hash des mots de passe
  const adminPassword = await bcrypt.hash("@Staka2020@", 10);
  const userPassword = await bcrypt.hash("Usertes123@", 10);

  console.log("üîë Cr√©ation de l'administrateur...");
  const admin = await prisma.user.create({
    data: {
      email: "contact@staka.fr",
      password: adminPassword,
      role: Role.ADMIN,
      isActive: true,
      prenom: "Admin",
      nom: "Staka",
    },
  });

  console.log("‚úÖ Administrateur cr√©√©.");

  console.log("üîë Cr√©ation de l'utilisateur test...");
  const user = await prisma.user.create({
    data: {
      email: "usertest@test.com",
      password: userPassword,
      role: Role.USER,
      isActive: true,
      prenom: "User",
      nom: "Test",
    },
  });

  console.log("‚úÖ Utilisateur test cr√©√©.");

  // Nettoyage des anciens tarifs pour n'en garder que 3
  console.log("üßπ Nettoyage des anciens tarifs...");
  await prisma.tarif.deleteMany();

  console.log("üí∞ Ajout des 3 tarifs sp√©cifi√©s...");

  // 1. Pack KDP
  await prisma.tarif.create({
    data: {
      nom: "Pack KDP",
      description: "Id√©al pour d√©buter",
      prix: 35000, // 350‚Ç¨
      prixFormate: "350‚Ç¨",
      typeService: "Pack",
      dureeEstimee: "5-7 jours",
      actif: true,
      ordre: 1,
      stripeProductId: null,
      stripePriceId: null,
    },
  });

  // 2. Correction Standard
  await prisma.tarif.create({
    data: {
      nom: "Pack Int√©gral",
      description: "Solution compl√®te",
      prix: 200, // 2‚Ç¨
      prixFormate: "2‚Ç¨/page",
      typeService: "Correction",
      dureeEstimee: "10-15 jours",
      actif: true,
      ordre: 2,
      stripeProductId: null,
      stripePriceId: null,
    },
  });

  // 3. Pack R√©daction Compl√®te
  await prisma.tarif.create({
    data: {
      nom: "Pack R√©daction",
      description: "Coaching complet",
      prix: 145000, // 1450‚Ç¨
      prixFormate: "1450‚Ç¨",
      typeService: "R√©daction",
      dureeEstimee: "3-6 semaines",
      actif: true,
      ordre: 3,
      stripeProductId: null,
      stripePriceId: null,
    },
  });

  console.log("‚úÖ 3 tarifs cr√©√©s avec succ√®s !");

  // Cr√©ation des FAQ
  console.log("‚ùì Cr√©ation des FAQ de d√©monstration...");

  // Nettoyage des anciennes FAQ
  await prisma.fAQ.deleteMany();

  const faqData = [
    {
      question: "Quels types de manuscrits acceptez-vous ?",
      answer:
        "Nous travaillons avec tous les genres litt√©raires : romans, nouvelles, essais, biographies, m√©moires, po√©sie, guides pratiques, etc. Nous acceptons les fichiers Word (.doc, .docx) et PDF dans toutes les langues avec caract√®res latins.",
      details: null,
      categorie: "G√©n√©ral",
      ordre: 1,
      visible: true,
    },
    {
      question: "Quels sont vos d√©lais de livraison ?",
      answer:
        "Le d√©lai moyen est de 7 √† 15 jours selon la longueur du manuscrit et le pack choisi. Pour le Pack Int√©gral, comptez 15 jours pour un manuscrit de 200 pages. Une estimation pr√©cise vous est donn√©e d√®s r√©ception de votre fichier.",
      details:
        "D√©lais par service : Correction seule : 7-10 jours ‚Ä¢ Design + mise en page : 5-7 jours ‚Ä¢ Pack complet : 10-15 jours ‚Ä¢ Urgence (48h) : +50% du tarif",
      categorie: "D√©lais",
      ordre: 2,
      visible: true,
    },
    {
      question: "Comment fonctionne la tarification du Pack Standard ?",
      answer:
        "Le Pack Standard inclut 10 pages gratuites, puis 2‚Ç¨ par page de la page 11 √† 300, et 1‚Ç¨ par page au-del√† de 300 pages. Le calcul est automatique selon le nombre de pages de votre manuscrit.",
      details:
        "Exemple : Manuscrit de 250 pages = 10 pages gratuites + 240 pages √ó 2‚Ç¨ = 480‚Ç¨",
      categorie: "Tarifs",
      ordre: 3,
      visible: true,
    },
    {
      question: "Quels sont les moyens de paiement accept√©s ?",
      answer:
        "Nous acceptons les cartes bancaires (Visa, Mastercard, American Express) via notre plateforme s√©curis√©e Stripe. Le paiement est demand√© √† la validation de votre commande.",
      details:
        "Paiement 100% s√©curis√© ‚Ä¢ Facturation automatique ‚Ä¢ Garantie remboursement si non satisfait",
      categorie: "Paiement",
      ordre: 4,
      visible: true,
    },
    {
      question: "Proposez-vous un √©chantillon gratuit ?",
      answer:
        "Oui ! Nous proposons la correction gratuite des 5 premi√®res pages de votre manuscrit pour que vous puissiez √©valuer la qualit√© de notre travail avant de commander.",
      details:
        "Service gratuit ‚Ä¢ Sans engagement ‚Ä¢ D√©lai 24h ‚Ä¢ Parfait pour tester notre approche",
      categorie: "√âchantillon",
      ordre: 5,
      visible: true,
    },
    {
      question: "Comment suivre l'avancement de ma commande ?",
      answer:
        "Vous disposez d'un espace client personnalis√© o√π vous pouvez suivre l'√©tat de votre commande, √©changer avec nos correcteurs et t√©l√©charger vos fichiers corrig√©s.",
      details:
        "Notifications par email ‚Ä¢ Messagerie int√©gr√©e ‚Ä¢ Historique complet ‚Ä¢ T√©l√©chargements illimit√©s",
      categorie: "Suivi",
      ordre: 6,
      visible: true,
    },
    {
      question: "Que comprend exactement le Pack KDP ?",
      answer:
        "Le Pack KDP comprend la correction compl√®te, la mise en page professionnelle, la cr√©ation de la couverture et l'optimisation pour la publication sur Amazon KDP.",
      details:
        "Correction orthographique et stylistique ‚Ä¢ Mise en page professionnelle ‚Ä¢ Couverture personnalis√©e ‚Ä¢ Format pr√™t pour KDP ‚Ä¢ Guide de publication",
      categorie: "Packs",
      ordre: 7,
      visible: true,
    },
  ];

  for (const faq of faqData) {
    await prisma.fAQ.create({
      data: faq,
    });
  }

  console.log(
    `‚úÖ ${faqData.length} FAQ cr√©√©es (${
      faqData.filter((f) => f.visible).length
    } visibles, ${faqData.filter((f) => !f.visible).length} cach√©es)`
  );

  // Pages l√©gales (identiques au seed-prod)
  console.log("üìÑ Cr√©ation des pages l√©gales...");

  await prisma.page.deleteMany();

  const pagesLegales = [
    {
      title: "Mentions l√©gales",
      slug: "mentions-legales",
      content: "Contenu des mentions l√©gales...",
      type: PageType.LEGAL,
      status: PageStatus.PUBLISHED,
    },
    {
      title: "Politique de confidentialit√©",
      slug: "politique-confidentialite",
      content: "Contenu de la politique de confidentialit√©...",
      type: PageType.LEGAL,
      status: PageStatus.PUBLISHED,
    },
    {
      title: "Conditions G√©n√©rales de Vente",
      slug: "cgv",
      content: "Contenu des conditions g√©n√©rales de vente...",
      type: PageType.LEGAL,
      status: PageStatus.PUBLISHED,
    },
    {
      title: "RGPD",
      slug: "rgpd",
      content: "Informations RGPD...",
      type: PageType.LEGAL,
      status: PageStatus.PUBLISHED,
    },
  ];

  for (const page of pagesLegales) {
    await prisma.page.create({
      data: page,
    });
    console.log(`‚úÖ Page l√©gale seed√©e : ${page.title}`);
  }

  console.log("üå± Seed synchronis√© avec succ√®s !");
  console.log(`üë§ 2 utilisateurs cr√©√©s (admin + user test)`);
  console.log(
    `üí∞ 3 tarifs cr√©√©s (Pack KDP, Correction Standard, Pack R√©daction)`
  );
  console.log(`‚ùì ${faqData.length} FAQ cr√©√©es`);
  console.log(`üìÑ ${pagesLegales.length} pages l√©gales cr√©√©es`);
}

main()
  .then(async () => {
    await prisma.$disconnect();
    console.log("üå± Seed termin√© avec succ√®s.");
  })
  .catch(async (e) => {
    console.error("‚ùå Erreur lors du seed :", e);
    await prisma.$disconnect();
    process.exit(1);
  });
