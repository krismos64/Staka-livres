# Configuration Docker pour production
# Usage: docker-compose -f docker-compose.prod.yml up -d
# Architecture: nginx externe (HTTPS) -> conteneurs internes
services:
  frontend:
    image: krismos64/frontend:latest
    container_name: staka_frontend_prod
    ports:
      - "8080:80"  # Port interne pour nginx reverse proxy
    volumes:
      - ./frontend/nginx-prod.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    image: krismos64/backend:latest
    container_name: staka_backend_prod
    ports:
      - "3000:3000"  # Port interne coh√©rent avec nginx
    env_file:
      - .env.prod
    volumes:
      - /opt/staka/uploads:/app/uploads  # Stockage local persistant VPS
    depends_on:
      - db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: mysql:8.0
    container_name: staka_db_prod
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=StakaRootPass2024!
      - MYSQL_DATABASE=stakalivres
      - MYSQL_USER=staka
      - MYSQL_PASSWORD=staka.ed2020Livres
    volumes:
      - /opt/staka/data/mysql:/var/lib/mysql
      - /opt/staka/backup:/backup  # Dossier de sauvegarde
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "staka", "-pstaka.ed2020Livres"]
      interval: 30s
      timeout: 10s
      retries: 3
