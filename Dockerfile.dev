# Dockerfile.dev pour le développement frontend avec Vitest
FROM node:20.19.0-alpine

# Install curl and netcat for healthchecks
RUN apk add --no-cache curl netcat-openbsd

WORKDIR /app

# Copier package.json ET package-lock.json si il existe
COPY frontend/package.json frontend/package-lock.json* ./

# Installer avec npm (plus fiable que yarn dans Docker)
ENV NODE_ENV=development
RUN npm install --legacy-peer-deps

# Copier le reste du code
COPY frontend/ .

# Copier les types partagés
COPY shared/ ../shared/

# Vérifier l'installation
RUN echo "=== VÉRIFICATIONS ==="
RUN npm list vite || echo "⚠️ Vite non installé"
RUN npm list vitest || echo "⚠️ Vitest non installé"
RUN ls -la node_modules/.bin/ | grep -E "(vite|vitest)" || echo "⚠️ Binaires manquants"
RUN test -f node_modules/.bin/vite && echo "✅ vite binary trouvé" || echo "❌ vite binary manquant"

# Exposer les ports
EXPOSE 5173 8080

# Script de healthcheck simple
RUN echo '#!/bin/sh' > /healthcheck.sh && \
    echo 'while true; do' >> /healthcheck.sh && \
    echo '  echo "HTTP/1.1 200 OK\nContent-Type: text/plain\nContent-Length: 2\n\nOK" | nc -l -p 8080 -q 1' >> /healthcheck.sh && \
    echo 'done' >> /healthcheck.sh && \
    chmod +x /healthcheck.sh

# Utiliser npm run dev au lieu de vite directement
CMD ["/bin/sh", "-c", "/healthcheck.sh & npm run dev"]